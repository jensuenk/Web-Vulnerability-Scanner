import { Component, ElementRef, ViewChild } from '@angular/core';
import { ScanInputService } from './scan-input.service'
import { MessageService } from 'primeng/api';
import { interval } from 'rxjs';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
  providers: [MessageService]
})
export class AppComponent {
  @ViewChild('section') public section: ElementRef;

  title = 'website-scanner';

  url: string;
  showResults: boolean = false;

  scanCompleted: boolean = false;
  displayModal: boolean;

  source = interval(1000);

  captcha: boolean = true;

  constructor(private scanInputService: ScanInputService, private messageService: MessageService) {
  }

  startScan() {
    this.showResults = false;
    if (!this.captcha) {
      this.messageService.add({ severity: 'error', summary: 'Captcha required', detail: 'Please complete the captcha before starting a scan!' });
      return;
    }
    if (!(this.url.startsWith("http://") || this.url.startsWith("https://"))) {
      this.url = 'http://' + this.url;
    }
    this.scanInputService.getRequest(this.url).subscribe(
      result => {
        this.scanInputService.url = this.url;
        this.showResults = true;
        this.loading();
      },
      error => {
        if (error.status == 200 || error.status == 201 || error.status == 202 || error.status == 203 || error.status == 204 || error.status == 205 || error.status == 206 || error.status == 207) {
          this.scanInputService.url = this.url;
          this.showResults = true;
          this.loading();
        }
        else {
          this.showResults = false;
          this.messageService.add({ severity: 'error', summary: 'Invalid URL', detail: 'This URL is invalid, please check for spelling.' });
        }
      }
    );
  }

  loading() {
    this.displayModal = true;
    const subscribe = this.source.subscribe(val => {
      if (this.scanInputService.isScanReady()) {
        this.scanCompleted = true;
        this.displayModal = false;
        this.moveToScanSection();
        subscribe.unsubscribe();
        this.messageService.add({ severity: 'success', summary: 'Scan completed', detail: 'Successfull analyzed the website ' + this.url + '.' });
      }
    });
  }

  moveToScanSection() {
    this.section.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'start' });
  }

  showResponse(event) {
    this.messageService.add({ severity: 'info', summary: 'Captcha success', detail: 'You completed the captcha, you may now start a scan' });
    this.captcha = true;
  }
}


